/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;                                        // all following lenghts are in mm

// general geometry variables
pi 3.1415926535;
angleDeg 20;                                          // angle of the ramp
angle #eval{$angleDeg/180*$pi}; 
lenghtRamp 337;                                       // lenght of the ramp
hight 400;                                            // hight to the upper wall
inletX 200;                                           // lenght of the inlet with noSlip BC
PreInletX 100;                                        // lenght of the inlet with slip BC // later refered to as PreInlet
outletX #eval{cos($angle)*$lenghtRamp+5*$lenghtRamp}; // lenght of outlet behind the ramp. 5x is a approximation which has to be testet
jetLowEdge 270;                                       // distance between the low edge of the jet and the end of the ramp
jetHight 0.5;                                         // hight of the Jet opening
width2D 0.5;
hightMidPlane 125;                                    // hight of the plane in the middle of the mesh to help refining the lower part
hightUpperPlane 350;                                 
angleRedSkewness #eval{$angleDeg/2};                  // angle of the left side of main block to reduce the skewness of the cell abovr the ramp
angleRedSkew1 #eval{$angleRedSkewness/180*$pi};  
angleRedSkewness2 #eval{$angleDeg/2};;                // angle of the right side of the main block to reduce the skewness of the cell abovr the ramp
angleRedSkew2 #eval{$angleRedSkewness2/180*$pi};  

// number of cells for each block  
nCellXPreInlet 60; 
nCellXInlet 150;
nCellXMainLeft 90;
nCellXJet 1;
nCellXMainRight 290;
nCellXOutlet 800;

nCellYlow 250;
nCellYmiddle 125;
nCellYhigh 100;

nCellZJet 1;

// mesh grading 
GradXPreInlet 1.0;     // >1 to refine downstream
GradXInlet 1.5;        // >1 to refine downstream //2.8
GradXMainLeft 3.0;      
GradXJet 1.0;           
GradXMainRight 0.333;     
GradXOutlet 0.4;       

GradYLow 10.0;         // >1 to refine in direction of the wall  
GradYMiddle 1.0;      // 
GradYHigh 0.1;        //(2.0 0.5)

vertices
(
    (#eval{-$PreInletX-$inletX} 0 $width2D) // 0
    (#eval{-$PreInletX-$inletX} 0 -$width2D) // 1    
    (#eval{-$PreInletX-$inletX} $hightMidPlane $width2D) // 2
    (#eval{-$PreInletX-$inletX} $hightMidPlane -$width2D) // 3    
    (#eval{-$PreInletX-$inletX} $hight $width2D) // 4
    (#eval{-$PreInletX-$inletX} $hight -$width2D) // 5

    (-$inletX 0 $width2D)  // 6
    (-$inletX 0 -$width2D)  // 7
    (-$inletX $hightMidPlane $width2D)  // 8
    (-$inletX $hightMidPlane -$width2D)  // 9
    (-$inletX $hight $width2D)  // 10
    (-$inletX $hight -$width2D)  // 11
    
    (0 0 $width2D)  // 12
    (0 0 -$width2D)  // 13
    (#eval{tan($angleRedSkew1)*$hightMidPlane} $hightMidPlane $width2D)  // 14
    (#eval{tan($angleRedSkew1)*$hightMidPlane} $hightMidPlane -$width2D)  // 15
    (#eval{tan($angleRedSkew1)*$hight} $hight $width2D)  // 16
    (#eval{tan($angleRedSkew1)*$hight} $hight -$width2D)  // 17

    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} #eval{-sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} $width2D) // 18
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} #eval{-sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} -$width2D) // 19
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} $width2D) // 20
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)} -$width2D) // 21
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)))} $hight $width2D) // 22
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight)))} $hight -$width2D) // 23

    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)} #eval{-sin($angle)*($lenghtRamp-$jetLowEdge)} $width2D) // 24
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)} #eval{-sin($angle)*($lenghtRamp-$jetLowEdge)} -$width2D) // 25
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp-$jetLowEdge)} $width2D) // 26
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp-$jetLowEdge)} -$width2D) // 27
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp-$jetLowEdge)))} $hight $width2D) // 28
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp-$jetLowEdge)))} $hight -$width2D) // 29

    (#eval{cos($angle)*$lenghtRamp} #eval{ (-1)*(sin($angle))*$lenghtRamp} $width2D)  // 30
    (#eval{cos($angle)*$lenghtRamp} #eval{ (-1)*(sin($angle))*$lenghtRamp} -$width2D)  // 31
    (#eval{(cos($angle)*($lenghtRamp))+(tan($angleRedSkew2)*$hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp)} $width2D)  // 32
    (#eval{(cos($angle)*($lenghtRamp))+(tan($angleRedSkew2)*$hightMidPlane)} #eval{$hightMidPlane-sin($angle)*($lenghtRamp)} -$width2D)  // 33    
    (#eval{cos($angle)*($lenghtRamp)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp)))} $hight $width2D)  // 34
    (#eval{cos($angle)*($lenghtRamp)+tan($angleRedSkew1)*($hight+(sin($angle)*($lenghtRamp)))} $hight -$width2D)  // 35
    
    ($outletX #eval{ (-1)*sin($angle)*$lenghtRamp} $width2D) // 36
    ($outletX #eval{ (-1)*sin($angle)*$lenghtRamp} -$width2D) // 37
    ($outletX #eval{$hightMidPlane-sin($angle)*($lenghtRamp)} $width2D) // 38
    ($outletX #eval{$hightMidPlane-sin($angle)*($lenghtRamp)} -$width2D) // 39
    ($outletX $hight $width2D) // 40
    ($outletX $hight -$width2D) // 41    
    
    (#eval{-$PreInletX-$inletX} $hightUpperPlane $width2D) // 2 42
    (#eval{-$PreInletX-$inletX} $hightUpperPlane -$width2D) // 3 43
    (-$inletX $hightUpperPlane $width2D)  // 8 44
    (-$inletX $hightUpperPlane -$width2D)  // 9 45
    (#eval{tan($angleRedSkew1)*$hightUpperPlane} $hightUpperPlane $width2D)  // 14 46
    (#eval{tan($angleRedSkew1)*$hightUpperPlane} $hightUpperPlane -$width2D)  // 15 47
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hightUpperPlane+sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight))} $hightUpperPlane $width2D) // 20 48
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge-$jetHight)+tan($angleRedSkew1)*($hightUpperPlane+sin($angle)*($lenghtRamp-$jetLowEdge-$jetHight))} $hightUpperPlane -$width2D) // 21 49
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hightUpperPlane+sin($angle)*($lenghtRamp-$jetLowEdge))} $hightUpperPlane $width2D) // 26 50
    (#eval{cos($angle)*($lenghtRamp-$jetLowEdge)+tan($angleRedSkew1)*($hightUpperPlane+sin($angle)*($lenghtRamp-$jetLowEdge))} $hightUpperPlane -$width2D) // 27 51
    (#eval{(cos($angle)*($lenghtRamp))+(tan($angleRedSkew2)*($hightUpperPlane+sin($angle)*($lenghtRamp)))} $hightUpperPlane $width2D)  // 32 52
    (#eval{(cos($angle)*($lenghtRamp))+(tan($angleRedSkew2)*($hightUpperPlane+sin($angle)*($lenghtRamp)))} $hightUpperPlane -$width2D)  // 33  53
    ($outletX $hightUpperPlane $width2D) // 38 54
    ($outletX $hightUpperPlane -$width2D) // 39 55

    );


blocks
(
    // pre inlet block // (z x y)
    hex (6 7 1 0 8 9 3 2)  // bottom
    ($nCellZJet $nCellXPreInlet $nCellYlow)
    simpleGrading (1 $GradXPreInlet $GradYLow)

    hex (8 9 3 2 44 45 43 42)  // middle
    ($nCellZJet $nCellXPreInlet $nCellYmiddle)
    simpleGrading (1 $GradXPreInlet $GradYMiddle)

    hex (44 45 43 42 10 11 5 4)  // top
    ($nCellZJet $nCellXPreInlet $nCellYhigh)
    simpleGrading (1 $GradXPreInlet $GradYHigh)

    // inlet Block 
    hex (12 13 7 6 14 15 9 8) // bottom
    ($nCellZJet $nCellXInlet $nCellYlow)                 
    simpleGrading (1 $GradXInlet $GradYLow)

    hex (14 15 9 8 46 47 45 44) // middle
    ($nCellZJet $nCellXInlet $nCellYmiddle)                 
    simpleGrading (1 $GradXInlet $GradYMiddle)

    hex (46 47 45 44 16 17 11 10) // top
    ($nCellZJet $nCellXInlet $nCellYhigh)                 
    simpleGrading (1 $GradXInlet $GradYHigh)


    // Main 
    hex (18 19 13 12 20 21 15 14) // left bottom 
    ($nCellZJet $nCellXMainLeft $nCellYlow)                 
    simpleGrading (1 $GradXMainLeft $GradYLow)

    hex (20 21 15 14 48 49 47 46)  // left middle 
    ($nCellZJet $nCellXMainLeft $nCellYmiddle)                 
    simpleGrading (1 $GradXMainLeft $GradYMiddle)

    hex (48 49 47 46 22 23 17 16)  // left top 
    ($nCellZJet $nCellXMainLeft $nCellYhigh)                 
    simpleGrading (1 $GradXMainLeft $GradYHigh)

    hex (24 25 19 18 26 27 21 20) // jet bottom 
    ($nCellZJet $nCellXJet $nCellYlow)                 
    simpleGrading (1 $GradXJet $GradYLow)

    hex (26 27 21 20 50 51 49 48) // jet middle
    ($nCellZJet $nCellXJet $nCellYmiddle)                 
    simpleGrading (1 $GradXJet $GradYMiddle)

    hex (50 51 49 48 28 29 23 22) // jet top
    ($nCellZJet $nCellXJet $nCellYhigh)                 
    simpleGrading (1 $GradXJet $GradYHigh)

    hex (30 31 25 24 32 33 27 26) // right bottom 
    ($nCellZJet $nCellXMainRight $nCellYlow)                 
    simpleGrading (1 $GradXMainRight $GradYLow)

    hex (32 33 27 26 52 53 51 50)  // right middle 
    ($nCellZJet $nCellXMainRight $nCellYmiddle)                 
    simpleGrading (1 $GradXMainRight $GradYMiddle)

    hex (52 53 51 50 34 35 29 28)  // right top 
    ($nCellZJet $nCellXMainRight $nCellYhigh)                 
    simpleGrading (1 $GradXMainRight $GradYHigh)

    // Outlet Block 
    hex (36 37 31 30 38 39 33 32)  // bottom 
    ($nCellZJet $nCellXOutlet $nCellYlow)                 
    simpleGrading (1 $GradXOutlet $GradYLow)

    hex (38 39 33 32 54 55 53 52)  // middle
    ($nCellZJet $nCellXOutlet $nCellYmiddle)                 
    simpleGrading (1 $GradXOutlet $GradYMiddle)

    hex (54 55 53 52 40 41 35 34)  // top
    ($nCellZJet $nCellXOutlet $nCellYhigh)                 
    simpleGrading (1 $GradXOutlet $GradYHigh)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
           (0 1 3 2)
           (2 3 43 42)
           (42 43 5 4)
        );
    }
  
    outlet
    {
        type patch;
        faces
        (
            (36 37 39 38)
            (38 39 55 54)
            (54 55 41 40)                       
        );
    }
    wallPreInlet
    {
        type wall;
        faces
        (
        // upper wall
        (10 11 5 4)
        // lower wall
        (6 7 1 0)
        );

    }
    upperWall
    {
        type wall;
        faces
        (
            (16 17 11 10)
            (22 23 17 16)
            (28 29 23 22)
            (34 35 29 28)
            (40 41 35 34)       
        );
    }
    lowerWall  
    {
        type wall;
        faces
        (
            (12 13 7 6)
            (18 19 13 12)
            
            (30 31 25 24)
            (36 37 31 30)                             
        );
    }
    Jet
    {
        type wall;   // just to try without the jet active
        faces 
        (
            (25 19 18 24)
        );
    }
    frontAndBack
    {
        type            empty;
        faces
        (
            // front
            (6 8 2 0)
            (8 44 42 2)
            (44 10 4 42)

            (12 14 8 6)
            (14 46 44 8)
            (46 16 10 44)

            (18 20 14 12)
            (20 48 46 14)
            (48 22 16 46)

            (24 26 20 18)
            (26 50 48 20)
            (50 28 22 48)

            (30 32 26 24)
            (32 52 50 26)
            (52 34 28 50)

            (36 38 32 30)
            (38 54 52 32)
            (54 40 34 52)
            
            // back 
            (7 9 3 1)
            (9 45 43 3)
            (45 11 5 43)

            (13 15 9 7)
            (15 47 45 9)
            (47 17 11 45)

            (19 21 15 13)
            (21 49 47 15)
            (49 23 17 47)

            (25 27 21 19)
            (27 51 49 21)
            (51 29 23 49)

            (31 33 27 25)
            (33 53 51 27)
            (53 35 29 51)

            (37 39 33 31)
            (39 55 53 33)
            (55 41 35 53)            
        );
    }
);


// ************************************************************************* //
